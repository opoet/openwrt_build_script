From 940723fb9da6de410bae27309cc0941b9cce4142 Mon Sep 17 00:00:00 2001
From: Bitterblue Smith <rtl8821cerfe2@gmail.com>
Date: Mon, 19 Feb 2024 13:50:28 +0200
Subject: [PATCH 1/2] wifi: rtw88: usb: Add magic missing from register
 accesses

RTL8822CU, RTL8822BU, and RTL8821CU seem to need this extra write after
reading and writing certain addresses.

Signed-off-by: Bitterblue Smith <rtl8821cerfe2@gmail.com>
---
 drivers/net/wireless/realtek/rtw88/usb.c | 55 ++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/drivers/net/wireless/realtek/rtw88/usb.c b/drivers/net/wireless/realtek/rtw88/usb.c
index e6ab1ac6d709..7b589056185a 100644
--- a/drivers/net/wireless/realtek/rtw88/usb.c
+++ b/drivers/net/wireless/realtek/rtw88/usb.c
@@ -33,6 +33,41 @@ static void rtw_usb_fill_tx_checksum(struct rtw_usb *rtwusb,
 	rtw_tx_fill_txdesc_checksum(rtwdev, &pkt_info, skb->data);
 }

+#define REG_ON_SEC 0x00
+#define REG_OFF_SEC 0x01
+#define REG_LOCAL_SEC 0x02
+
+static void rtw_usb_reg_sec(struct rtw_dev *rtwdev, u32 addr, __le32 *data)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	struct usb_device *udev = rtwusb->udev;
+	u8 current_reg_sec = REG_LOCAL_SEC;
+	u16 t_reg = 0x4e0;
+	int status = 0;
+	u8 t_len = 1;
+
+	if (addr < 0xFE00) {
+		if (addr <= 0xff)
+			current_reg_sec = REG_ON_SEC;
+		else if (0x1000 <= addr && addr <= 0x10ff)
+			current_reg_sec = REG_ON_SEC;
+		else
+			current_reg_sec = REG_OFF_SEC;
+	} else {
+		current_reg_sec = REG_LOCAL_SEC;
+	}
+
+	if (current_reg_sec == REG_ON_SEC) {
+		status = usb_control_msg(udev, usb_sndctrlpipe(udev, 0),
+					 RTW_USB_CMD_REQ, RTW_USB_CMD_WRITE,
+					 t_reg, 0, data, t_len, 500);
+
+		if (status != t_len)
+			pr_warn("%s: reg 0x%x, usb write %u fail, status: %d\n",
+				__func__, t_reg, t_len, status);
+	}
+}
+
 static u32 rtw_usb_read(struct rtw_dev *rtwdev, u32 addr, u16 len)
 {
 	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
@@ -58,6 +93,16 @@ static u32 rtw_usb_read(struct rtw_dev *rtwdev, u32 addr, u16 len)
 		rtw_err(rtwdev, "read register 0x%x failed with %d\n",
 			addr, ret);

+	switch (rtwdev->chip->id) {
+	case RTW_CHIP_TYPE_8822C:
+	case RTW_CHIP_TYPE_8822B:
+	case RTW_CHIP_TYPE_8821C:
+		rtw_usb_reg_sec(rtwdev, addr, data);
+		break;
+	default:
+		break;
+	}
+
 	return le32_to_cpu(*data);
 }

@@ -102,6 +147,16 @@ static void rtw_usb_write(struct rtw_dev *rtwdev, u32 addr, u32 val, int len)
 	if (ret < 0 && ret != -ENODEV && count++ < 4)
 		rtw_err(rtwdev, "write register 0x%x failed with %d\n",
 			addr, ret);
+
+	switch (rtwdev->chip->id) {
+	case RTW_CHIP_TYPE_8822C:
+	case RTW_CHIP_TYPE_8822B:
+	case RTW_CHIP_TYPE_8821C:
+		rtw_usb_reg_sec(rtwdev, addr, data);
+		break;
+	default:
+		break;
+	}
 }

 static void rtw_usb_write8(struct rtw_dev *rtwdev, u32 addr, u8 val)
--
2.43.2

